extends layout
block styles
  link(rel='stylesheet', href='custom-styles.css')
block content
  .container-fluid.my-4
    //- Card Container for Issue Assets
    .card.shadow-lg
      .card-header.bg-primary.text-white.text-center
        h2.mb-0 Issue Asset Management

      .card-body
        //- Button to Add Asset Issue
        .row.mb-4
          .col-12.d-flex.justify-content-end
            button.btn.btn-primary.btn-lg.rounded-pill(type='button', data-toggle='modal', data-target='#addIssueModal') 
              i.fas.fa-plus-circle.mr-2
              | Add New Asset Issue

        //- Data Table with Scroll
        .row
          .col-12
            .table-responsive
              table.table.table-striped.table-hover.table-bordered#issuedAssetsTable
                thead.bg-primary.text-white
                  tr
                    th Asset
                    th Employee
                    th Issue Date
                    th Actions
                tbody
                  each issue in issues
                    tr
                      td= issue.Asset ? `${issue.Asset.model} - ${issue.Asset.uniqueId}` : 'N/A'
                      td= issue.Employee ? `${issue.Employee.employeeId} - ${issue.Employee.name}` : 'N/A'
                      td= issue.issueDate ? new Date(issue.issueDate).toLocaleDateString() : 'N/A'
                      td
                        a.btn.btn-warning.btn-sm.rounded-pill(href=`#`, data-toggle='modal', data-target=`#editIssueModal-${issue.id}`)
                          i.fas.fa-edit.mr-1
                          | Edit
                        button.btn.btn-danger.btn-sm.rounded-pill(type='button', data-toggle='modal', data-target=`#deleteIssueModal-${issue.id}`)
                          i.fas.fa-trash-alt.mr-1
                          | Delete
                        button.btn.btn-info.btn-sm.rounded-pill(type='button', data-toggle='modal', data-target=`#returnIssueModal-${issue.id}`)
                          i.fas.fa-undo.mr-1
                          | Return

                        //- Modal for Editing Issue
                        .modal.fade(id=`editIssueModal-${issue.id}`, tabindex='-1', role='dialog')
                          .modal-dialog.modal-lg(role='document')
                            .modal-content
                              .modal-header
                                h5.modal-title Edit Issue
                                button.close(type='button', data-dismiss='modal', aria-label='Close')
                                  span(aria-hidden='true') ×
                              .modal-body
                                form(action=`/assets/issue/edit/${issue.id}` method='POST')
                                  .row
                                    .col-md-4.mb-3
                                      .form-group
                                        label(for='assetId') Asset
                                        select.form-control(name='assetId' id='assetId')
                                          option(value='') Select Asset
                                          each asset in assets
                                            option(value=asset.id selected=(parseInt(issue.assetId) === asset.id))= `${asset.model} - ${asset.uniqueId}`
                                    .col-md-4.mb-3
                                      .form-group
                                        label(for='employeeId') Employee
                                        select.form-control(name='employeeId' id='employeeId')
                                          option(value='') Select Employee
                                          each employee in employees
                                            option(value=employee.id selected=(issue.employeeId == employee.id))= `${employee.employeeId} - ${employee.name}`
                                    .col-md-4.mb-3
                                      .form-group
                                        label(for='issueDate') Issue Date
                                        input.form-control(type='date' id='issueDate' name='issueDate' value=issue.issueDate.toISOString().split('T')[0])
                                  button.btn.btn-primary.btn-lg.rounded-pill(type='submit') Save Changes
                              .modal-footer
                                button.btn.btn-secondary(type='button', data-dismiss='modal') Close

                        //- Modal for Deleting Issue
                        .modal.fade(id=`deleteIssueModal-${issue.id}`, tabindex='-1', role='dialog')
                          .modal-dialog(role='document')
                            .modal-content
                              .modal-header
                                h5.modal-title Delete Issue
                                button.close(type='button', data-dismiss='modal', aria-label='Close')
                                  span(aria-hidden='true') ×
                              .modal-body
                                p Are you sure you want to delete this issue?
                              .modal-footer
                                button.btn.btn-secondary(type='button', data-dismiss='modal') Cancel
                                a.btn.btn-danger(href=`/assets/issue/delete/${issue.id}`) Delete

                        //- Modal for Returning Issue
                        .modal.fade(id=`returnIssueModal-${issue.id}`, tabindex='-1', role='dialog')
                          .modal-dialog.modal-lg(role='document')
                            .modal-content
                              .modal-header
                                h5.modal-title Return Asset
                                button.close(type='button', data-dismiss='modal', aria-label='Close')
                                  span(aria-hidden='true') ×
                              .modal-body
                                form(action=`/assets/return/add` method='POST')
                                  input(type='hidden' name='assetId' value=issue.assetId)
                                  input(type='hidden' name='employeeId' value=issue.employeeId)
                                  .row
                                    .col-md-4.mb-3
                                      .form-group
                                        label(for='returnDate') Return Date
                                        input.form-control(type='date' id='returnDate' name='returnDate' required)
                                    .col-md-4.mb-3
                                      .form-group
                                        label(for='returnReason') Return Reason
                                        select.form-control(name='returnReason' id='returnReason' required)
                                          option(value='') Select Reason
                                          option(value='upgrade') Upgrade
                                          option(value='repair') Repair
                                          option(value='resignation') Resignation
                                          option(value='other') Other
                                  .form-group.mt-3
                                    button.btn.btn-primary.btn-lg.rounded-pill(type='submit') 
                                      i.fas.fa-undo.mr-2
                                      | Return Asset

    //- Modal for Adding New Asset Issue
    .modal.fade#addIssueModal(tabindex='-1', role='dialog')
      .modal-dialog.modal-lg(role='document')
        .modal-content
          .modal-header
            h5.modal-title Add New Asset Issue
            button.close(type='button', data-dismiss='modal', aria-label='Close')
              span(aria-hidden='true') ×
          .modal-body
            form(action='/assets/issue/add' method='POST')
              .row
                .col-md-4.mb-3
                  .form-group
                    label(for='assetId') Asset
                    select.form-control(name='assetId' id='assetId' required)
                      option(value='') Select Asset
                      each asset in assets
                        option(value=asset.id)= `${asset.model} - ${asset.uniqueId}`
                .col-md-4.mb-3
                  .form-group
                    label(for='employeeId') Employee
                    select.form-control(name='employeeId' id='employeeId' required)
                      option(value='') Select Employee
                      each employee in employees
                        option(value=employee.id)= `${employee.employeeId} - ${employee.name}`
                .col-md-4.mb-3
                  .form-group
                    label(for='issueDate') Issue Date
                    input.form-control(type='date' id='issueDate' name='issueDate' required)
              .form-group.mt-3
                button.btn.btn-primary.btn-lg.rounded-pill(type='submit') 
                  i.fas.fa-plus-circle.mr-2
                  | Add Issue

  //- Toasts for Notifications
  .toast-container(position='top-right')
    if message && type === 'success'
      .toast.toast-success(role='alert', aria-live='assertive', aria-atomic='true')
        .toast-header.bg-success.text-white
          strong.mr-auto Success
          button.ml-2.mb-1.close(type='button', data-dismiss='toast', aria-label='Close')
            span(aria-hidden='true') &times;
        .toast-body= message

    if message && type === 'error'
      .toast.toast-danger(role='alert', aria-live='assertive', aria-atomic='true')
        .toast-header.bg-danger.text-white
          strong.mr-auto Error
          button.ml-2.mb-1.close(type='button', data-dismiss='toast', aria-label='Close')
            span(aria-hidden='true') &times;
        .toast-body= message

  //- Scripts
  script(src='https://code.jquery.com/jquery-3.5.1.min.js')
  script(src='https://cdn.datatables.net/1.10.21/js/jquery.dataTables.js')
  script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js')
  script.
    $(document).ready(function() {
      var table = $('#issuedAssetsTable').DataTable({
        "scrollY": "400px",
        "scrollCollapse": true,
        "paging": true,
        "searching": true,
        "ordering": true,
        "order": [[0, 'asc']],
        "columnDefs": [{
          "targets": [3],
          "orderable": false
        }],
        "dom": '<"row"<"col-md-6"l><"col-md-6"f>>rt<"row"<"col-md-5"i><"col-md-7"p>>',
        "language": {
          "lengthMenu": "Show _MENU_ entries",
          "search": "",
          "searchPlaceholder": "Search...",
          "paginate": {
            "previous": "Prev",
            "next": "Next"
          }
        }
      });
      $('.toast').toast('show');
    });
