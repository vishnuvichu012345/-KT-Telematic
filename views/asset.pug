extends layout

block styles
  link(rel='stylesheet', href='/assets/custom-styles.css')

block content
  .container-fluid.my-4
    //- Card Container
    .card.shadow-lg
      .card-header.bg-primary.text-white.text-center
        h2.mb-0 Asset List

      .card-body
        //- Button to Add New Asset
        .row.mb-4
          .col-12.d-flex.justify-content-end
            button.btn.btn-primary.btn-lg.rounded-pill(type='button', data-toggle='modal', data-target='#addAssetModal') 
              i.fas.fa-plus-circle.mr-2
              | Add New Asset

        //- Data Table with Scroll
        .row
          .col-12
            .table-responsive
              table.table.table-striped.table-hover.table-bordered#assetTable
                thead.bg-primary.text-white
                  tr
                    th Serial Number
                    th Unique ID
                    th Make
                    th Model
                    th Category
                    th Status
                    th Location
                    th Purchase Date
                    th Cost
                    th Actions
                tbody
                  each asset in assets
                    tr
                      td= asset.serialNumber
                      td= asset.uniqueId
                      td= asset.make
                      td= asset.model
                      td= asset.category ? asset.category.name : 'No Category'
                      td= asset.status
                      td= asset.location
                      td= new Date(asset.purchaseDate).toLocaleDateString('en-GB')
                      td= asset.cost
                      td
                        a.btn.btn-warning.btn-sm.rounded-pill(href=`#`, data-toggle='modal', data-target=`#editModal${asset.id}`)
                          i.fas.fa-edit.mr-1
                          | Edit
                        button.btn.btn-danger.btn-sm.rounded-pill(type='button', data-toggle='modal', data-target=`#deleteModal${asset.id}`)
                          i.fas.fa-trash-alt.mr-1
                          | Delete

                        //- Modal for Editing
                        .modal.fade(id=`editModal${asset.id}`, tabindex='-1', role='dialog')
                          .modal-dialog.modal-lg(role='document')
                            .modal-content
                              .modal-header
                                h5.modal-title Edit Asset
                                button.close(type='button', data-dismiss='modal', aria-label='Close')
                                  span(aria-hidden='true') ×
                              .modal-body
                                form(action=`/assets/edit/${asset.id}` method='POST')
                                  .row
                                    .col-md-6.mb-3
                                      .form-group
                                        label(for='serialNumber') Serial Number
                                        input.form-control(type='text' id='serialNumber' name='serialNumber' value=asset.serialNumber readonly)
                                    .col-md-6.mb-3
                                      .form-group
                                        label(for='uniqueId') Unique ID
                                        input.form-control(type='text' id='uniqueId' name='uniqueId' value=asset.uniqueId readonly)
                                  .row
                                    .col-md-6.mb-3
                                      .form-group
                                        label(for='make') Make
                                        input.form-control(type='text' id='make' name='make' value=asset.make required)
                                    .col-md-6.mb-3
                                      .form-group
                                        label(for='model') Model
                                        input.form-control(type='text' id='model' name='model' value=asset.model required)
                                  .row
                                    .col-md-6.mb-3
                                      .form-group
                                        label(for='assetCategoryId') Category
                                        select.form-control(name='assetCategoryId' id='assetCategoryId')
                                          option(value='') Select Category
                                          each category in categories
                                            option(value=category.id selected=(asset.assetCategoryId === category.id))= category.name
                                    .col-md-6.mb-3
                                      .form-group
                                        label(for='status') Status
                                        input.form-control(type='text' id='status' name='status' value=asset.status)
                                  .row
                                    .col-md-6.mb-3
                                      .form-group
                                        label(for='location') Location
                                        input.form-control(type='text' id='location' name='location' value=asset.location)
                                    .col-md-6.mb-3
                                      .form-group
                                        label(for='purchaseDate') Purchase Date
                                        input.form-control(type='date' id='purchaseDate' name='purchaseDate' value=(new Date(asset.purchaseDate)).toISOString().split('T')[0])
                                    .col-md-6.mb-3
                                      .form-group
                                        label(for='cost') Cost
                                        input.form-control(type='number' id='cost' name='cost' value=asset.cost)
                                  button.btn.btn-primary.btn-lg.rounded-pill(type='submit') Save changes
                              .modal-footer
                                button.btn.btn-secondary(type='button', data-dismiss='modal') Close

                        //- Modal for Deleting
                        .modal.fade(id=`deleteModal${asset.id}`, tabindex='-1', role='dialog')
                          .modal-dialog(role='document')
                            .modal-content
                              .modal-header
                                h5.modal-title Delete Asset
                                button.close(type='button', data-dismiss='modal', aria-label='Close')
                                  span(aria-hidden='true') ×
                              .modal-body
                                p Are you sure you want to delete this asset?
                              .modal-footer
                                button.btn.btn-secondary(type='button', data-dismiss='modal') Cancel
                                a.btn.btn-danger(href=`/assets/delete/${asset.id}`) Delete

      //- Modal for Adding New Asset
      .modal.fade#addAssetModal(tabindex='-1', role='dialog')
        .modal-dialog.modal-lg(role='document')
          .modal-content
            .modal-header
              h5.modal-title Add New Asset
              button.close(type='button', data-dismiss='modal', aria-label='Close')
                span(aria-hidden='true') ×
            .modal-body
              form(action='/assets/add' method='POST')
                .row
                  .col-md-6.mb-3
                    .form-group
                      label(for='serialNumber') Serial Number
                      input.form-control(type='text' id='serialNumber' name='serialNumber' placeholder='Enter serial number' required)
                  .col-md-6.mb-3
                    .form-group
                      label(for='uniqueId') Unique ID
                      input.form-control(type='text' id='uniqueId' name='uniqueId' placeholder='Enter unique ID' required)
                .row
                  .col-md-6.mb-3
                    .form-group
                      label(for='make') Make
                      input.form-control(type='text' id='make' name='make' placeholder='Enter make')
                  .col-md-6.mb-3
                    .form-group
                      label(for='model') Model
                      input.form-control(type='text' id='model' name='model' placeholder='Enter model')
                .row
                  .col-md-6.mb-3
                    .form-group
                      label(for='assetCategoryId') Category
                      select.form-control(name='assetCategoryId' id='assetCategoryId')
                        option(value='') Select Category
                        each category in categories
                          option(value=category.id)= category.name
                  .col-md-6.mb-3
                    .form-group
                      label(for='status') Status
                      input.form-control(type='text' id='status' name='status' placeholder='Enter status')
                .row
                  .col-md-6.mb-3
                    .form-group
                      label(for='location') Location
                      input.form-control(type='text' id='location' name='location' placeholder='Enter location')
                  .col-md-6.mb-3
                    .form-group
                      label(for='purchaseDate') Purchase Date
                      input.form-control(type='date' id='purchaseDate' name='purchaseDate' placeholder='Enter purchase date')
                  .col-md-6.mb-3
                    .form-group
                      label(for='cost') Cost
                      input.form-control(type='number' id='cost' name='cost' placeholder='Enter cost')
                .form-group.mt-3
                  button.btn.btn-primary.btn-lg.rounded-pill(type='submit') 
                    i.fas.fa-plus-circle.mr-2
                    | Add Asset

  //- Toasts for Notifications
  .toast-container(position='top-right')
    if message && type === 'success'
      .toast.toast-success(role='alert', aria-live='assertive', aria-atomic='true')
        .toast-header.bg-success.text-white
          strong.mr-auto Success
          button.ml-2.mb-1.close(type='button', data-dismiss='toast', aria-label='Close')
            span(aria-hidden='true') &times;
        .toast-body= message

    if message && type === 'error'
      .toast.toast-danger(role='alert', aria-live='assertive', aria-atomic='true')
        .toast-header.bg-danger.text-white
          strong.mr-auto Error
          button.ml-2.mb-1.close(type='button', data-dismiss='toast', aria-label='Close')
            span(aria-hidden='true') &times;
        .toast-body= message

  //- Scripts
  script(src='https://code.jquery.com/jquery-3.5.1.min.js')
  script(src='https://cdn.datatables.net/1.10.21/js/jquery.dataTables.js')
  script(src='https://cdn.datatables.net/1.10.21/js/dataTables.bootstrap4.min.js')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js')
  script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js')
  script.
    $(document).ready(function() {
      $('#assetTable').DataTable({
        "scrollY": "400px", // Adjust this value if needed
        "scrollCollapse": true,
        "paging": true,
        "searching": true,
        "ordering": true,
        "order": [[0, 'asc']],
        "columnDefs": [{
          "targets": [2],
          "orderable": false
        }],
        "dom": '<"row"<"col-md-6"l><"col-md-6"f>>rt<"row"<"col-md-5"i><"col-md-7"p>>',
        "language": {
          "lengthMenu": "Show _MENU_ entries",
          "search": "",
          "searchPlaceholder": "Search...",
          "paginate": {
            "previous": "Prev",
            "next": "Next"
          }
        }
      });

      // Show toast notification on adding/editing/deleting category
      $('.toast').toast('show');
    });
